import z from "zod";

export const userSchema = z.object({
  login: z.string(),
  id: z.number().int(),
  user_view_type: z.string().optional(),
  node_id: z.string(),
  avatar_url: z.url(),
  gravatar_id: z.union([z.string(), z.null()]),
  url: z.url(),
  html_url: z.url(),
  followers_url: z.url(),
  following_url: z.string(),
  gists_url: z.string(),
  starred_url: z.string(),
  subscriptions_url: z.url(),
  organizations_url: z.url(),
  repos_url: z.url(),
  events_url: z.string(),
  received_events_url: z.url(),
  type: z.string(),
  site_admin: z.boolean(),
  name: z.union([z.string(), z.null()]),
  company: z.union([z.string(), z.null()]),
  blog: z.union([z.string(), z.null()]),
  location: z.union([z.string(), z.null()]),
  email: z.union([z.email(), z.null()]),
  notification_email: z.union([z.email(), z.null()]).optional(),
  hireable: z.union([z.boolean(), z.null()]),
  bio: z.union([z.string(), z.null()]),
  twitter_username: z.union([z.string(), z.null()]).optional(),
  public_repos: z.number().int(),
  public_gists: z.number().int(),
  followers: z.number().int(),
  following: z.number().int(),
  created_at: z.string(),
  updated_at: z.string(),
  plan: z
    .object({
      collaborators: z.number().int(),
      name: z.string(),
      space: z.number().int(),
      private_repos: z.number().int(),
    })
    .optional(),
  business_plus: z.boolean().optional(),
  ldap_dn: z.string().optional(),
});
